{"version":3,"sources":["components/Header.js","components/Personal.js","components/Education.js","components/Practical.js","components/HTMLView.js","components/ErrorBox.js","App.js","index.js"],"names":["Header","className","Component","Personal","updateValue","event","props","onValueChange","target","name","value","this","editView","type","placeholder","state","personalFirstName","onChange","required","personalLastName","personalEmail","personalPhoneNumber","Education","handleSwitch","switchToggle","degree","school","schoolStartDate","schoolEndDate","htmlFor","checked","switchStatus","shape","style","fontSize","color","margin","padding","float","Practical","companyName","jobTitle","jobDesc","jobStartDate","jobEndDate","HTMLView","ErrorBox","error","firstNameError","lastNameError","emailError","phoneError","degreeError","schoolError","schoolStartError","schoolEndError","companyError","jobTitleError","jobDescError","jobStartError","jobEndError","App","setState","validate","includes","renderErrors","prevState","showErrorBox","handleToggleClick","preventDefault","updateDateValues","edu","job","console","log","handleSwitchToggle","area","schoolSwitch","jobSwitch","showErrors","eduSwitchStatus","jobSwitchStatus","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3442418.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component { \n\n  render() {\n    return (\n      <header>\n        <div className=\"logo\">CV Application</div>\n        <div className=\"slogan\">Create a CV</div>\n      </header>\n    )\n  }\n}\n\nexport default Header\n","import React, { Component, useState, useEffect } from 'react';\n\n//Starting on rewrite of class components into functions with hooks\n\nclass Personal extends Component {\n\n  updateValue = (event) => {\n    this.props.onValueChange(event.target.name, event.target.value)\n  }\n\n  render() {\n    return !this.props.editView ? (\n      null\n    ) : (\n      <div className='section'>\n        <h1>Personal Information</h1>\n        <hr />\n        <form className='personal-form'>\n          <label>\n            <input\n              type='text'\n              placeholder='First Name'\n              value={this.props.state.personalFirstName}\n              className='first-name'\n              name='personalFirstName'\n              onChange={this.updateValue}\n              required />\n          </label>\n          <label>\n            <input\n              type='text'\n              placeholder='Last Name'\n              value={this.props.state.personalLastName}\n              className='last-name'\n              name='personalLastName'\n              onChange={this.updateValue} \n              required />\n          </label>\n          <label>\n            <input\n              type='text'\n              placeholder='Email'\n              value={this.props.state.personalEmail}\n              className='email'\n              name='personalEmail'\n              onChange={this.updateValue}\n              required />\n          </label>\n          <label>\n            <input\n              type='text'\n              placeholder='Phone Number'\n              value={this.props.state.personalPhoneNumber}\n              className='phone-number'\n              name='personalPhoneNumber'\n              onChange={this.updateValue}\n              required />\n          </label>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default Personal\n","import React, { Component } from 'react';\nimport '../styles/App.css';\nimport { Switch } from 'pretty-checkbox-react';\nimport '@djthoms/pretty-checkbox';\n\nclass Education extends Component {\n\n  updateValue = (event) => {\n    this.props.onValueChange(event.target.name, event.target.value)\n  }\n\n  handleSwitch = (event) => {\n    this.props.switchToggle(event.target.name);\n  }\n\n  render() {\n    return !this.props.editView ? (\n      null\n    ) : (\n      <div className='section'>\n        <h1>Education Information</h1>\n        <hr />\n        <form className='education-form'>\n          <input\n            type='text'\n            placeholder='Type of Degree'\n            value={this.props.state.degree}\n            className='degree-input'\n            name='degree'\n            onChange={this.updateValue} />\n          <input\n            type='text'\n            placeholder='School'\n            value={this.props.state.school}\n            className='school-input'\n            name='school'\n            onChange={this.updateValue} />\n          <input\n            type='date'\n            value={this.props.state.schoolStartDate}\n            className='school-start-date-input'\n            name='schoolStartDate'\n            onChange={this.updateValue} />\n          <input\n            type='date'\n            placeholder='To'\n            value={this.props.state.schoolEndDate}\n            className='school-end-date-input'\n            name='schoolEndDate'\n            onChange={this.updateValue} />\n          <label htmlFor='test-sweitch'>\n            <Switch\n              checked={this.props.switchStatus}\n              onChange={this.handleSwitch}\n              shape='fill'\n              className='preset-switch'\n              name='schoolSwitch'\n              style={{\n                fontSize: '1.5em',\n                color: 'white',\n                margin: '0 auto',\n                padding: '10px',\n                float: 'right'\n              }}>Present</Switch>\n          </label>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default Education\n","import React, { Component } from 'react'\nimport { Switch } from 'pretty-checkbox-react';\nimport '@djthoms/pretty-checkbox';\n\nclass Practical extends Component {\n\n  updateValue = (event) => {\n    this.props.onValueChange(event.target.name, event.target.value);\n  }\n\n  handleSwitch = (event) => {\n    this.props.switchToggle(event.target.name);\n  }\n\n  render() {\n    return !this.props.editView ? (\n      null\n    ) : (\n      <div className='section'>\n        <h1>Work Experience</h1>\n        <hr />\n        <form className='education-form'>\n          <input\n            type='text'\n            placeholder='Company'\n            value={this.props.state.companyName}\n            className='company-input'\n            name='companyName'\n            onChange={this.updateValue} />\n          <input\n            type='text'\n            placeholder='Job Title'\n            value={this.props.state.jobTitle}\n            className='job-title-input'\n            name='jobTitle'\n            onChange={this.updateValue} />\n          <textarea\n            placeholder='Job Description'\n            value={this.props.state.jobDesc}\n            className='job-desc-input'\n            name='jobDesc'\n            onChange={this.updateValue} />\n          <input\n            type='date'\n            placeholder='From'\n            value={this.props.state.jobStartDate}\n            className='job-start-date-input'\n            name='jobStartDate'\n            onChange={this.updateValue} />\n          <input\n            type='date'\n            placeholder='To'\n            value={this.props.state.jobEndDate}\n            className='job-end-date-input'\n            name='jobEndDate'\n            onChange={this.updateValue} />\n          <label htmlFor='test-sweitch'>\n            <Switch\n              checked={this.props.switchStatus}\n              onChange={this.handleSwitch}\n              shape='fill'\n              className='preset-switch'\n              name='jobSwitch'\n              style={{\n                fontSize: '1.5em',\n                color: 'white',\n                margin: '0 auto',\n                padding: '10px',\n                float: 'right'\n              }}>Present</Switch>\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Practical;\n","import React, { Component } from 'react';\n\nclass HTMLView extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return this.props.editView ? (\n      null\n    ) : (\n        <div>\n          <div className='preview section'>\n            <h1>Personal Information</h1>\n            <hr />\n            <p>{this.props.state.personalFirstName} {this.props.state.personalLastName}</p>\n            <p>{this.props.state.personalEmail}</p>\n            <p>{this.props.state.personalPhoneNumber}</p>\n          </div>\n          <div className='preview section'>\n            <h1>Education Information</h1>\n            <hr />\n            <p>{this.props.state.degree}</p>\n            <p>{this.props.state.school}</p>\n            <p>Started: {this.props.state.schoolStartDate} | Graduated: {this.props.state.schoolEndDate}</p>\n          </div>\n          <div className='preview section'>\n            <h1>Job Information</h1>\n            <hr />\n            <p>{this.props.state.companyName}</p>\n            <p>{this.props.state.jobTitle}</p>\n            <p>{this.props.state.jobDesc}</p>\n            <p>Started: {this.props.state.jobStartDate} | Left: {this.props.state.jobEndDate}</p>\n          </div>\n        </div>\n    )\n  }\n\n}\n\nexport default HTMLView;\n","import React, { Component } from 'react';\n\nclass ErrorBox extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return !this.props.error ? (\n      null\n    ) : (\n        <div className='error-box'>\n        <p>{this.props.state.firstNameError}</p>\n        <p>{this.props.state.lastNameError}</p>\n        <p>{this.props.state.emailError}</p>\n        <p>{this.props.state.phoneError}</p>\n        <p>{this.props.state.degreeError}</p>\n        <p>{this.props.state.schoolError}</p>\n        <p>{this.props.state.schoolStartError}</p>\n        <p>{this.props.state.schoolEndError}</p>\n        <p>{this.props.state.companyError}</p>\n        <p>{this.props.state.jobTitleError}</p>\n        <p>{this.props.state.jobDescError}</p>\n        <p>{this.props.state.jobStartError}</p>\n        <p>{this.props.state.jobEndError}</p>\n      </div>\n    )\n  }\n}\n\nexport default ErrorBox;\n","import React, { Component } from 'react';\nimport './styles/App.css';\nimport Header from './components/Header';\nimport Personal from './components/Personal';\nimport Education from './components/Education';\nimport Practical from './components/Practical';\nimport HTMLView from './components/HTMLView';\nimport ErrorBox from './components/ErrorBox';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      personalFirstName: '',\n      personalLastName: '',\n      personalEmail: '',\n      personalPhoneNumber: '',\n      degree: '',\n      school: '',\n      schoolStartDate: '',\n      schoolEndDate: '',\n      schoolSwitch: false,\n      companyName: '',\n      jobTitle: '',\n      jobStartDate: '',\n      jobEndDate: '',\n      jobDesc: '',\n      jobSwitch: false,\n      firstNameError: '',\n      lastNameError: '',\n      emailError: '',\n      phoneError: '',\n      degreeError: '',\n      schoolError: '',\n      schoolStartError: '',\n      schoolEndError: '',\n      companyError: '',\n      jobTitleError: '',\n      jobDescError: '',\n      jobStartError: '',\n      jobEndError: '',\n      editView: true,\n      showErrorBox: false\n    }\n  }\n\n  updateValue = (name, value) => {\n   this.setState({[name]: value})\n  };\n\n  validate = () => {\n    let firstNameError = '';\n    let lastNameError = '';\n    let emailError = '';\n    let phoneError = '';\n    let degreeError = '';\n    let schoolError = '';\n    let schoolStartError = '';\n    let schoolEndError = '';\n    let companyError = '';\n    let jobTitleError = '';\n    let jobDescError = '';\n    let jobStartError = '';\n    let jobEndError = '';\n\n    if (this.state.personalFirstName === '') {\n      firstNameError = 'First Name: Field cannot be blank';\n    }\n    if (this.state.personalLastName === '') {\n      lastNameError = 'Last Name: Field cannot be blank';\n    }\n    if (!this.state.personalEmail.includes('@')) {\n      emailError = 'Email: Please enter a valid email';\n    }\n    if (this.state.personalPhoneNumber === '') {\n      phoneError = 'Phone Number: Field cannot be blank';\n    }\n    if (this.state.degree === '') { \n      degreeError = 'Type of Degree: Field cannot be blank';\n    }\n    if (this.state.school === '') { \n      schoolError = 'School: Field cannot be blank';\n    }\n    if (this.state.schoolStartDate === '') { \n      schoolStartError = 'School Start Date: Please choose a date';\n    }\n    if (this.state.schoolEndDate === '') { \n      schoolEndError = 'School End Date: Please choose a date';\n    }\n    if (this.state.companyName === '') { \n      companyError = 'Company: Field cannot be blank';\n    }\n    if (this.state.jobTitle === '') { \n      jobTitleError = 'Job Title: Field cannot be blank';\n    }\n    if (this.state.jobDesc === '') { \n      jobDescError = 'Job Description: Field cannot be blank';\n    }\n    if (this.state.jobStartDate === '') { \n      jobStartError = 'Job Start Date: Please pick a date';\n    }\n    if (this.state.jobEndDate === '') { \n      jobEndError = 'Job End Date: Please pick a date';\n    }\n    \n\n    if (firstNameError || lastNameError || emailError || phoneError ||\n      degreeError || schoolError || schoolStartError || schoolEndError ||\n      companyError || jobTitleError || jobDescError || jobStartError || jobEndError) {\n      this.setState({\n        firstNameError, lastNameError, emailError, phoneError,\n        degreeError, schoolError, schoolStartError, schoolEndError, companyError,\n        jobTitleError, jobDescError, jobStartError, jobEndError\n      });\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  renderErrors = () => {\n    this.setState(prevState => ({\n      showErrorBox: !prevState.showErrorBox\n    }));\n  }\n\n  handleToggleClick = (event) => {\n    event.preventDefault();\n    const isValid = this.validate();\n    if (isValid) {\n      this.setState(prevState => ({\n        editView: !prevState.editView\n      }));\n    } else {\n      this.renderErrors();\n    }\n  }\n\n  updateDateValues = (edu, job) => {\n    if (edu === false) {\n      this.setState(prevState => ({\n        schoolEndDate: 'Present'\n      }));\n    } else if (edu === true) {\n      this.setState(prevState => ({\n        schoolEndDate: ''\n      }));\n    }\n    \n    if (job === false) {\n      this.setState(prevState => ({\n        jobEndDate: 'Present'\n      }));\n    } else if (job === true){\n      this.setState(prevState => ({\n        jobEndDate: ''\n      }));\n    }\n    console.log(this.state.jobEndDate)\n  }\n\n  handleSwitchToggle = (area) => {\n    if (area === 'eduSwitch') {\n      this.setState(prevState => ({\n        schoolSwitch: !prevState.schoolSwitch\n      }));\n    } else if (area === 'jobSwitch') {\n      this.setState(prevState => ({\n        jobSwitch: !prevState.jobSwitch\n      }));\n    }\n    \n    this.updateDateValues(this.state.schoolSwitch, this.state.jobSwitch);\n  }\n\n  render() {\n    const showErrors = this.state.showErrorBox;\n    const editView = this.state.editView;\n    const switchToggle = this.handleSwitchToggle;\n    const eduSwitchStatus = this.state.schoolSwitch;\n    const jobSwitchStatus = this.state.jobSwitch;\n    const state = this.state;\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className='wrapper'>\n          <ErrorBox error={showErrors} state={state}/>\n          <Personal\n            onValueChange={this.updateValue}\n            editView={editView}\n            state={state}\n          />\n          <Education\n            onValueChange={this.updateValue}\n            editView={editView}\n            state={state}\n            switchStatus={eduSwitchStatus}\n            switchToggle={switchToggle}\n          />\n          <Practical\n            onValueChange={this.updateValue}\n            editView={editView}\n            state={state}\n            switchStatus={jobSwitchStatus}\n            switchToggle={switchToggle}\n          />\n          <HTMLView\n            editView={editView}\n            state={state}\n          />\n          <br />\n          <button className='preview-btn' onClick={this.handleToggleClick}>{this.state.editView ? 'Preview' : 'Edit'}</button>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}